\\wsl.localhost\Ubuntu-22.04\usr\local\bin

cd fullcycle

docker build -t jeanpsampaio/argocd-fullcycle:latest .

docker push jeanpsampaio/argocd-fullcycle:latest

docker run --rm -p 8080:8080 jeanpsampaio/argocd-fullcycle:latest

mkdir k8s 

kind create cluster --image=kindest/node:v1.21.2 --name dev

create deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: goapp
spec:
  selector:
    matchLabels:
      app: goapp
  template:
    metadata:
      labels:
        app: goapp
    spec:
      containers:
      - name: goapp
        image: jeanpsampaio/argocd-fullcycle:latest
        ports:
        - containerPort: 8080

kubectl apply -f k8s/deployment.yaml

kubectl get pods 

create service.yaml /fullcycle/k8s/

apiVersion: v1
kind: Service
metadata:
  name: goapp
spec:
  selector:
    app: goapp
  ports:
  - port: 8080
    targetPort: 8080

kubectl apply -f k8s/service.yaml 

kubectl get svc 

kubectl port-forward svc/goapp 8080:8080

kustomize build 

create kustomization.yaml

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
- deployment.yaml
- service.yaml

namespace: goapp

images:
- name: goapp
  newName: jeanpsampaio/argocd-fullcycle
  newTag: latest

kustomize build 

change kustomization.yaml

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
- deployment.yaml
- service.yaml

namespace: goapp

images:
- name: goapp
  newName: jeanpsampaio/argocd-fullcycle
  newTag: v1

kustomize build 

Create github action 

name: CD
on:
  push:
    branches: [main]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: build image and push to docker hub
        uses: docker/build-push-action@v1.1.0
        with:
          username: wesleywillians
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: ${{ github.sha }}, latest 

cd fullcycle

git init 
gh repo create 

git branch -M main 
git push -u origin main 
git remote add origin https://github.com/jeansampaio/argocd-fullcycle.git
git push --set-upstream origin main 

Docker/Setting/Security/Create token 
GitHub/Repositorio do Projeto/Setting/Security/Actions secrets
git push origin main

Change cd.yaml 

name: CD
on:
  push:
    branches: [main]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: build image and push to docker hub
        uses: docker/build-push-action@v1.1.0
        with:
          username: jeanpsampaio
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: jeanpsampaio/argocd-fullcycle
          tags: ${{ github.sha }}, latest 

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build   
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize_version: v3.6.1

      - name: update k8s
        run: |
          cd k8s
          kustomize edit set image goapp=jeanpsampaio/argocd-fullcycle:${{ github.sha }}
          cat kustomization.yaml

      - name: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Deploy Action"
          git commit -am "change image tag"
          
      - name: push
        uses: ad-m/github-push-action@master  

kubectl delete deployment goapp 
kubectl delet svc goapp 

kubectl create namespace goapp 

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo

kubectl port-forward svc/argocd-server -n argocd 8080:443

